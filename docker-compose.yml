version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: task-manager-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456} # Default from .env
      MYSQL_DATABASE: ${MYSQL_DATABASE:-task_manager}     # Default from .env
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - internal_network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-app
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DATABASE_URL: mysql://root:${MYSQL_ROOT_PASSWORD:-123456}@db:3306/${MYSQL_DATABASE:-task_manager} # Uses db service name and defaults from .env
      NEXTAUTH_URL: ${NEXTAUTH_URL:-https://task-manager.softwarehub.vn} # Production URL
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-6uPabFGBDJtIOUsIdvQZOFlbGiXMuuHskRRqQ6eqajc=} # Default from AUTH_SECRET in .env
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID:-609224603478-r7k88vtfo0bptc1drf6fe5j3f7qsu89e.apps.googleusercontent.com} # Default from .env
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET:-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} # Default from .env
      PASSWORD_DEFAULT: ${PASSWORD_DEFAULT:-123123123} # Default from .env
      # Add any other necessary environment variables for your Next.js app
      NEXT_PUBLIC_WEBSOCKET_URL: wss://task-manager.softwarehub.vn/ws # WebSocket URL for frontend
    networks:
      - internal_network
      - traefik_public
    labels:
      - "traefik.enable=true"
      # HTTP Router
      - "traefik.http.routers.app-http.rule=Host(`task-manager.softwarehub.vn`)"
      - "traefik.http.routers.app-http.entrypoints=web"
      # Redirect HTTP to HTTPS
      - "traefik.http.routers.app-http.middlewares=redirect-to-https@docker"
      # HTTPS Router
      - "traefik.http.routers.app-https.rule=Host(`task-manager.softwarehub.vn`)"
      - "traefik.http.routers.app-https.entrypoints=websecure"
      - "traefik.http.routers.app-https.tls=true"
      - "traefik.http.routers.app-https.tls.certresolver=letsencrypt"
      # Service definition
      - "traefik.http.services.app-service.loadbalancer.server.port=3000" # Next.js default port

  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-websocket
    restart: unless-stopped
    # Override the default command from Dockerfile to start the WebSocket server
    command: ["npx", "ts-node", "websocket-server.ts"]
    environment:
      # Add any environment variables needed specifically for the WebSocket server
      NODE_ENV: production
    networks:
      - internal_network
      - traefik_public
    labels:
      - "traefik.enable=true"
      # WebSocket Router (using PathPrefix for /ws)
      - "traefik.http.routers.websocket-https.rule=Host(`task-manager.softwarehub.vn`) && PathPrefix(`/ws`)"
      - "traefik.http.routers.websocket-https.entrypoints=websecure"
      - "traefik.http.routers.websocket-https.tls=true"
      - "traefik.http.routers.websocket-https.tls.certresolver=letsencrypt"
      # Service definition for WebSocket
      - "traefik.http.services.websocket-service.loadbalancer.server.port=8080" # WebSocket server port

  traefik:
    image: traefik:v2.10 # Use a specific version
    container_name: traefik-proxy
    restart: unless-stopped
    ports:
      - "80:80"   # HTTP
      - "443:443" # HTTPS
      # - "8080:8080" # Traefik Dashboard (optional, uncomment to enable)
    command:
      - "--api.insecure=true" # Enable API & Dashboard (remove in production if not needed)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false" # Only expose containers with labels
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # Let's Encrypt configuration
      - "--certificatesresolvers.letsencrypt.acme.email=thienv29@gmail.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      # Global redirect HTTP to HTTPS (optional middleware)
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Middleware for redirect (referenced in app labels)
      - "--entrypoints.websecure.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "--entrypoints.websecure.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # Allow Traefik to listen to Docker events
      - traefik_certs:/letsencrypt # Persist Let's Encrypt certificates
    networks:
      - traefik_public

volumes:
  db_data:
  traefik_certs:

networks:
  internal_network: # Network for communication between app/ws and db
    driver: bridge
  traefik_public:   # Network for communication between traefik and app/ws
    driver: bridge
