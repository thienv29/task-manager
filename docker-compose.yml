services:
  db:
    image: mysql:8.0
    container_name: task-manager-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-123456}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-task_manager}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - internal_network
    deploy:
      resources:
        limits:
          memory: 700M

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-app
    restart: unless-stopped
    depends_on:
      - db
    environment:
      DATABASE_URL: mysql://root:${MYSQL_ROOT_PASSWORD:-123456}@db:3306/${MYSQL_DATABASE:-task_manager}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-https://task-manager.softwarehub.vn}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-6uPabFGBDJtIOUsIdvQZOFlbGiXMuuHskRRqQ6eqajc=}
      AUTH_GOOGLE_ID: ${AUTH_GOOGLE_ID:-609224603478-r7k88vtfo0bptc1drf6fe5j3f7qsu89e.apps.googleusercontent.com}
      AUTH_GOOGLE_SECRET: ${AUTH_GOOGLE_SECRET:-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}
      PASSWORD_DEFAULT: ${PASSWORD_DEFAULT:-123123123}
      NEXT_PUBLIC_WEBSOCKET_URL: wss://ws.softwarehub.vn
      AUTH_TRUST_HOST: ${AUTH_TRUST_HOST:-true}
    ports:
      - "5232:3000" # Expose app on port 5232
    networks:
      - internal_network
    deploy:
      resources:
        limits:
          memory: 500M

  websocket:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: task-manager-websocket
    restart: unless-stopped
    command: ["npx", "ts-node", "websocket-server.ts"]
    environment:
      NODE_ENV: production
    ports:
      - "5233:8080" # Expose WebSocket server
    networks:
      - internal_network
    deploy:
      resources:
        limits:
          memory: 300M

volumes:
  db_data:

networks:
  internal_network:
    driver: bridge